---
kind: pipeline
type: docker
name: default

steps:
  - name: setup
    image: node:16-slim
    when:
      event:
        - push
    commands:
      - yarn --frozen-lockfile

  - name: poetry
    image: abakus/lego-testbase:poetry
    when:
      event:
        - push
    commands:
      - poetry install --with dev

  - name: prettier
    image: node:16-slim
    when:
      event:
        - push
    depends_on:
      - setup
    commands:
      - yarn prettier:check

  - name: black
    image: abakus/lego-testbase:poetry
    when:
      event:
        - push
    commands:
      - poetry run black --check kaaf
    depends_on:
      - poetry

  - name: isort
    image: abakus/lego-testbase:poetry
    when:
      event:
        - push
    commands:
      - poetry run isort --check kaaf
    depends_on:
      - poetry

  - name: eslint
    image: node:16-slim
    when:
      event:
        - push
    depends_on:
      - setup
    commands:
      - yarn eslint

  - name: build
    image: node:16-slim
    when:
      event:
        - push
    depends_on:
      - setup
    commands:
      - yarn build

  - name: export
    image: node:16-slim
    when:
      event:
        - push
    depends_on:
      - build
    commands:
      - yarn export

  - name: server
    image: node:16-slim
    detach: true
    when:
      event:
        - push
    depends_on:
      - build
    commands:
      - yarn start

  - name: cypress
    image: cypress/included:10.7.0
    when:
      event:
        - push
    depends_on:
      - build
    environment:
      CYPRESS_RECORD_KEY:
        from_secret: cypress_record_key
      BASE_URL: "http://server:3000"
    commands:
      - apt-get -y install procps
      - cypress run --record

  - name: docker
    image: plugins/docker
    when:
      branch:
        - dev
      event:
        - push
      status:
        - success
    depends_on:
      - setup
      - prettier
      - eslint
      - build
      - export
    settings:
      registry: https://registry.webkom.dev
      repo: registry.webkom.dev/webkom/kvittering
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - v2
      build_args:
        - RELEASE=${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}

  - name: Deploy
    image: abakus/ansible-deploy
    when:
      branch:
        - dev
      event: push
      status: success
    settings:
      playbook: /infrastructure/esas/playbooks/deploy.yml
      repository:
        from_secret: infra_repository
      tags:
        - kvittering-staging
      limit: esas
      inventory: /infrastructure/inventory
      vault_password:
        from_secret: ansible_vault_password
      private_key:
        from_secret: infra_deploy_key
    depends_on:
      - docker
